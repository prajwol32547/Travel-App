{"ast":null,"code":"var _s = $RefreshSig$();\nimport Axios from \"axios\";\nimport refresh from \"./Refresh.js\";\nconst intercept = Axios.create({\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nconst responseIntercept = intercept.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const prevRequest = prevRequest === null || prevRequest === void 0 ? void 0 : prevRequest.config;\n  if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403 && !(prevRequest !== null && prevRequest !== void 0 && prevRequest.sent)) {}\n});\n_s(intercept.interceptors.request.use(_s(function (config) {\n  _s();\n  withCredential = true;\n  const Navigate = useNavigate();\n  const authToken = localStorage.getItem(\"jwtToken\");\n  intercept.headers.Authorization = `Bearer ${authToken}`;\n  if (!authToken == null) {\n    return intercept;\n  } else {\n    Navigate(\"/login\");\n  }\n}, \"BsdYp51khjvN8P3D7sGmxzWyV1E=\", true)), \"BsdYp51khjvN8P3D7sGmxzWyV1E=\", true);\nexport const postRequest = (api, data) => {\n  intercept.post(api, {\n    data\n  }).then(res => {\n    return res;\n  });\n};\nexport const getRequest = api => {\n  intercept.get(api).then(res => {\n    return res;\n  });\n};","map":{"version":3,"names":["Axios","refresh","intercept","create","withCredentials","headers","responseIntercept","interceptors","response","use","error","prevRequest","config","status","sent","request","withCredential","Navigate","useNavigate","authToken","localStorage","getItem","Authorization","postRequest","api","data","post","then","res","getRequest","get"],"sources":["/home/prajwol/Travel-App/travelapp/Client/src/Atom/AxiosReq.js"],"sourcesContent":["import Axios from \"axios\";\nimport refresh from \"./Refresh.js\";\nconst intercept = Axios.create({\n\twithCredentials: true,\n\theaders: { \"Content-Type\": \"application/json\" },\n});\n\nconst responseIntercept = intercept.interceptors.response.use(\n\t(response) => response,\n\tasync (error) => {\n\t\tconst prevRequest = prevRequest?.config;\n\t\tif (error?.response?.status === 403 && !prevRequest?.sent) {\n\t\t}\n\t}\n);\n\nintercept.interceptors.request.use(function (config) {\n\twithCredential = true;\n\tconst Navigate = useNavigate();\n\tconst authToken = localStorage.getItem(\"jwtToken\");\n\tintercept.headers.Authorization = `Bearer ${authToken}`;\n\tif (!authToken == null) {\n\t\treturn intercept;\n\t} else {\n\t\tNavigate(\"/login\");\n\t}\n});\nexport const postRequest = (api, data) => {\n\tintercept.post(api, { data }).then((res) => {\n\t\treturn res;\n\t});\n};\nexport const getRequest = (api) => {\n\tintercept.get(api).then((res) => {\n\t\treturn res;\n\t});\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,cAAc;AAClC,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC9BC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAC/C,CAAC,CAAC;AAEF,MAAMC,iBAAiB,GAAGJ,SAAS,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3DD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EAAA;EAChB,MAAMC,WAAW,GAAGA,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEC,MAAM;EACvC,IAAI,CAAAF,KAAK,aAALA,KAAK,0CAALA,KAAK,CAAEF,QAAQ,oDAAf,gBAAiBK,MAAM,MAAK,GAAG,IAAI,EAACF,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEG,IAAI,GAAE,CAC3D;AACD,CAAC,CACD;AAED,GAAAZ,SAAS,CAACK,YAAY,CAACQ,OAAO,CAACN,GAAG,IAAC,UAAUG,MAAM,EAAE;EAAA;EACpDI,cAAc,GAAG,IAAI;EACrB,MAAMC,QAAQ,GAAGC,WAAW,EAAE;EAC9B,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAClDnB,SAAS,CAACG,OAAO,CAACiB,aAAa,GAAI,UAASH,SAAU,EAAC;EACvD,IAAI,CAACA,SAAS,IAAI,IAAI,EAAE;IACvB,OAAOjB,SAAS;EACjB,CAAC,MAAM;IACNe,QAAQ,CAAC,QAAQ,CAAC;EACnB;AACD,CAAC,wCAAC;AACF,OAAO,MAAMM,WAAW,GAAG,CAACC,GAAG,EAAEC,IAAI,KAAK;EACzCvB,SAAS,CAACwB,IAAI,CAACF,GAAG,EAAE;IAAEC;EAAK,CAAC,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;IAC3C,OAAOA,GAAG;EACX,CAAC,CAAC;AACH,CAAC;AACD,OAAO,MAAMC,UAAU,GAAIL,GAAG,IAAK;EAClCtB,SAAS,CAAC4B,GAAG,CAACN,GAAG,CAAC,CAACG,IAAI,CAAEC,GAAG,IAAK;IAChC,OAAOA,GAAG;EACX,CAAC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}