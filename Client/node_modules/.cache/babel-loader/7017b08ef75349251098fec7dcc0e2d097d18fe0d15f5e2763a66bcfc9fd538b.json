{"ast":null,"code":"var _s = $RefreshSig$();\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { refresh } from \"./Refresh\";\nconst intercept = Axios.create({\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nconst responseIntercept = _s(intercept.interceptors.response.use(response => response, _s(async error => {\n  var _error$response;\n  _s();\n  const prevRequest = error === null || error === void 0 ? void 0 : error.config; // Correct the usage of prevRequest\n  if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403 && !(prevRequest !== null && prevRequest !== void 0 && prevRequest.sent)) {\n    try {\n      // Call the refresh function and await its completion\n      await refresh();\n      // Retry the original request after successful refresh\n      return Axios(prevRequest);\n    } catch (refreshError) {\n      // Handle refresh errors here, for example, redirect to login\n      console.error(\"Refresh failed\", refreshError);\n      // Redirect to the login page\n      useNavigate()(\"/login\");\n    }\n  }\n  return Promise.reject(error); // Re-throw the error if not handled\n}, \"7z+bV9xHBQ1A1bt6m/1oQLk0tZA=\", false, function () {\n  return [useNavigate];\n})), \"7z+bV9xHBQ1A1bt6m/1oQLk0tZA=\", false, function () {\n  return [useNavigate];\n});\nintercept.interceptors.request.use(function (config) {\n  const authToken = localStorage.getItem(\"jwtToken\");\n  intercept.headers.Authorization = `Bearer ${authToken}`;\n  if (!authToken) {\n    UseNavigate()(\"/login\");\n  }\n  return config; // Return the modified config for the request\n});\n\n// Correct the usage of intercept.post and intercept.get\nexport const postRequest = async (api, data) => {\n  try {\n    const res = await intercept.post(api, data);\n    return res.data;\n  } catch (error) {\n    console.error(\"Post request failed\", error);\n    throw error;\n  }\n};\nexport const getRequest = async api => {\n  try {\n    const res = await intercept.get(api);\n    return res.data;\n  } catch (error) {\n    console.error(\"Get request failed\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["Axios","useNavigate","refresh","intercept","create","withCredentials","headers","responseIntercept","interceptors","response","use","error","prevRequest","config","status","sent","refreshError","console","Promise","reject","request","authToken","localStorage","getItem","Authorization","UseNavigate","postRequest","api","data","res","post","getRequest","get"],"sources":["/home/prajwol/Travel-App/travelapp/Client/src/Atom/AxiosReq.js"],"sourcesContent":["import Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { refresh } from \"./Refresh\";\n\nconst intercept = Axios.create({\n\twithCredentials: true,\n\theaders: { \"Content-Type\": \"application/json\" },\n});\n\nconst responseIntercept = intercept.interceptors.response.use(\n\t(response) => response,\n\tasync (error) => {\n\t\tconst prevRequest = error?.config; // Correct the usage of prevRequest\n\t\tif (error?.response?.status === 403 && !prevRequest?.sent) {\n\t\t\ttry {\n\t\t\t\t// Call the refresh function and await its completion\n\t\t\t\tawait refresh();\n\t\t\t\t// Retry the original request after successful refresh\n\t\t\t\treturn Axios(prevRequest);\n\t\t\t} catch (refreshError) {\n\t\t\t\t// Handle refresh errors here, for example, redirect to login\n\t\t\t\tconsole.error(\"Refresh failed\", refreshError);\n\t\t\t\t// Redirect to the login page\n\t\t\t\tuseNavigate()(\"/login\");\n\t\t\t}\n\t\t}\n\t\treturn Promise.reject(error); // Re-throw the error if not handled\n\t}\n);\n\nintercept.interceptors.request.use(function (config) {\n\tconst authToken = localStorage.getItem(\"jwtToken\");\n\tintercept.headers.Authorization = `Bearer ${authToken}`;\n\tif (!authToken) {\n\t\tUseNavigate()(\"/login\");\n\t}\n\treturn config; // Return the modified config for the request\n});\n\n// Correct the usage of intercept.post and intercept.get\nexport const postRequest = async (api, data) => {\n\ttry {\n\t\tconst res = await intercept.post(api, data);\n\t\treturn res.data;\n\t} catch (error) {\n\t\tconsole.error(\"Post request failed\", error);\n\t\tthrow error;\n\t}\n};\n\nexport const getRequest = async (api) => {\n\ttry {\n\t\tconst res = await intercept.get(api);\n\t\treturn res.data;\n\t} catch (error) {\n\t\tconsole.error(\"Get request failed\", error);\n\t\tthrow error;\n\t}\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,WAAW;AAEnC,MAAMC,SAAS,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC9BC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAC/C,CAAC,CAAC;AAEF,MAAMC,iBAAiB,MAAGJ,SAAS,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3DD,QAAQ,IAAKA,QAAQ,KACtB,MAAOE,KAAK,IAAK;EAAA;EAAA;EAChB,MAAMC,WAAW,GAAGD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,MAAM,CAAC,CAAC;EACnC,IAAI,CAAAF,KAAK,aAALA,KAAK,0CAALA,KAAK,CAAEF,QAAQ,oDAAf,gBAAiBK,MAAM,MAAK,GAAG,IAAI,EAACF,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEG,IAAI,GAAE;IAC1D,IAAI;MACH;MACA,MAAMb,OAAO,EAAE;MACf;MACA,OAAOF,KAAK,CAACY,WAAW,CAAC;IAC1B,CAAC,CAAC,OAAOI,YAAY,EAAE;MACtB;MACAC,OAAO,CAACN,KAAK,CAAC,gBAAgB,EAAEK,YAAY,CAAC;MAC7C;MACAf,WAAW,EAAE,CAAC,QAAQ,CAAC;IACxB;EACD;EACA,OAAOiB,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC,CAAC,CAAC;AAC/B,CAAC;EAAA,QAJEV,WAAW;AAAA,GAKd;EAAA,QALGA,WAAW;AAAA,EAKd;AAEDE,SAAS,CAACK,YAAY,CAACY,OAAO,CAACV,GAAG,CAAC,UAAUG,MAAM,EAAE;EACpD,MAAMQ,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAClDpB,SAAS,CAACG,OAAO,CAACkB,aAAa,GAAI,UAASH,SAAU,EAAC;EACvD,IAAI,CAACA,SAAS,EAAE;IACfI,WAAW,EAAE,CAAC,QAAQ,CAAC;EACxB;EACA,OAAOZ,MAAM,CAAC,CAAC;AAChB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMa,WAAW,GAAG,OAAOC,GAAG,EAAEC,IAAI,KAAK;EAC/C,IAAI;IACH,MAAMC,GAAG,GAAG,MAAM1B,SAAS,CAAC2B,IAAI,CAACH,GAAG,EAAEC,IAAI,CAAC;IAC3C,OAAOC,GAAG,CAACD,IAAI;EAChB,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACfM,OAAO,CAACN,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACZ;AACD,CAAC;AAED,OAAO,MAAMoB,UAAU,GAAG,MAAOJ,GAAG,IAAK;EACxC,IAAI;IACH,MAAME,GAAG,GAAG,MAAM1B,SAAS,CAAC6B,GAAG,CAACL,GAAG,CAAC;IACpC,OAAOE,GAAG,CAACD,IAAI;EAChB,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACfM,OAAO,CAACN,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACZ;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}